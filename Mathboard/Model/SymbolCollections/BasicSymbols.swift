import Foundation

let basicSymbols: SymbolCollection = SymbolCollection(title: "Basic", symbols: [
    Symbol(glyph: "‚àé", name: "End of Proof"),
    Symbol(glyph: "‚Ñï", name: "Double-struck Capital N (Naturals)"),
    Symbol(glyph: "‚Ñ§", name: "Double-struck Capital Z (Integers)"),
    Symbol(glyph: "‚Ñö", name: "Double-struck Capital Q (Rationals)"),
    Symbol(glyph: "‚Ñù", name: "Double-struck Capital R (Reals)"),
    Symbol(glyph: "‚ÑÇ", name: "Double-struck Capital C (Complex)"),
    Symbol(glyph: "‚Ñç", name: "Double-struck Capital H (Quaternions)"),
    Symbol(glyph: "ùîª", name: "Double-struck Capital D"),
    Symbol(glyph: "‚àû", name: "Infinity"),
    Symbol(glyph: "‚â°", name: "Identical to"),
    Symbol(glyph: "=", name: "Equals Sign"),
    Symbol(glyph: "‚â†", name: "Not Equal To"),
    Symbol(glyph: "‚âà", name: "Almost Equal To"),
    Symbol(glyph: "‚àÖ", name: "Empty Set"),
    Symbol(glyph: "‚ä•", name: "Up Tack/Bottom Element/Nullity (Wheel Theory)"),
    Symbol(glyph: "‚à¥", name: "Therefore"),
    Symbol(glyph: "‚àµ", name: "Because"),
    Symbol(glyph: "√∑", name: "Division Sign"),
    Symbol(glyph: "œÄ", name: "Pi"),
    Symbol(glyph: "‚à†", name: "Angle"),
    Symbol(glyph: "‚àá", name: "Nabla"),
    Symbol(glyph: "‚àÇ", name: "Partial Differential"),
    Symbol(glyph: "‚àÄ", name: "For All"),
    Symbol(glyph: "‚àÉ", name: "Exists"),
    Symbol(glyph: "‚áí", name: "Implies"),
    Symbol(glyph: "‚áî", name: "Equivalent"),
    Symbol(glyph: "¬¨", name: "Negation"),
    Symbol(glyph: "‚àù", name: "Proportional To"),
    Symbol(glyph: "‚â§", name: "Less Than or Equal To"),
    Symbol(glyph: "‚â•", name: "Greater Than or Equal To")
])
